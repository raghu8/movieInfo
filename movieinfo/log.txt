package com.fiserv.catalyst.sales.regime.config;

import org.flywaydb.core.Flyway;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import jakarta.annotation.PostConstruct;
import jakarta.persistence.EntityManagerFactory;

import javax.sql.DataSource;
import java.util.HashMap;
import java.util.Objects;

@Configuration
@EnableTransactionManagement
@EnableJpaRepositories(
    basePackages = "com.fiserv.catalyst.sales.regime.repo", // Adjust package if incorrect
    entityManagerFactoryRef = "catalystEntityManagerFactory",
    transactionManagerRef = "catalystTransactionManager"
)
public class CatalystDatasourceConfiguration {

    @Bean
    @ConfigurationProperties("spring.datasource.catalyst")
    public DataSourceProperties catalystDBSourceProperties() {
        return new DataSourceProperties();
    }

    @Primary
    @Bean
    @ConfigurationProperties("spring.datasource.catalyst.hikari")
    public DataSource catalystDataSource() {
        return catalystDBSourceProperties()
                .initializeDataSourceBuilder()
                .build();
    }

    @Bean
    @ConfigurationProperties("spring.datasource.todos.hikari")
    public DataSource todosDataSource() {
        return catalystDBSourceProperties()
                .initializeDataSourceBuilder()
                .build();
    }

    @Primary
    @Bean
    public JdbcTemplate catalystJdbcTemplate() {
        return new JdbcTemplate(catalystDataSource());
    }

    @Primary
    @Bean
    public EntityManagerFactoryBuilder entityManagerFactoryBuilder() {
        return new EntityManagerFactoryBuilder(new HibernateJpaVendorAdapter(), new HashMap<>(), null);
    }

    @Primary
    @Bean
    public LocalContainerEntityManagerFactoryBean catalystEntityManagerFactory(
            EntityManagerFactoryBuilder builder) {
        return builder
                .dataSource(catalystDataSource())
                .packages("com.fiserv.catalyst.sales.regime.entity") // Ensure this package contains all JPA entities
                .persistenceUnit("catalystPU") // Added persistence unit name
                .build();
    }

    @Primary
    @Bean
    public PlatformTransactionManager catalystTransactionManager(
            LocalContainerEntityManagerFactoryBean catalystEntityManagerFactory) {
        return new JpaTransactionManager(
                Objects.requireNonNull(catalystEntityManagerFactory.getObject()));
    }

    @PostConstruct
    public void migrateFlyway() {
        Flyway flywayIntegration = Flyway.configure()
                .dataSource(catalystDataSource())
                .locations("classpath:db/migration") // Ensure migration scripts are in the correct location
                .load();
        flywayIntegration.migrate();
    }
}
